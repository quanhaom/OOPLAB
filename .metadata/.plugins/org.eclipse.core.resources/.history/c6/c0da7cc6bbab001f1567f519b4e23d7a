package model;

import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;

public abstract class Media {
	private String id;
    private String title;
    private String category;
    private double cost;

    public Media() {
        this.id = "";
        this.title = "";
        this.category = "";
        this.cost = 0.0;
    }
    public Media(String id, String title, String category, double cost) {
        this.id = id;
        this.title = title;
        this.category = category;
        this.cost = cost;
    }

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getTitle() {
        return title;
    }

    public void setTitle(String title) {
        this.title = title;
    }

    public String getCategory() {
        return category;
    }

    public void setCategory(String category) {
        this.category = category;
    }

    public double getCost() {
        return cost;
    }

    public void setCost(double cost) {
        this.cost = cost;
    }
    @Override
    public boolean equals(Object obj) {
        if (this == obj) return true;
        if (obj == null || !(obj instanceof Media)) return false;
        Media other = (Media) obj;
        return this.title != null && this.title.equals(other.title);
    }
    
    public static String getNextmediaId(String a) {
        String db = a.equals("DVD") ? "products" : 
                    a.equals("B") ? "books" : 
                    a.equals("CD") ? "cd" : "";

        String sqlMaxId = "SELECT COALESCE(MAX(id), 0) FROM " + db;
        
        try (PreparedStatement stmt = connection.prepareStatement(sqlMaxId);
             ResultSet rs = stmt.executeQuery()) {
            
            if (rs.next()) {
                String currentIdStr = rs.getString(1);

                if (currentIdStr != null && !currentIdStr.isEmpty()) {
                    String numericPart = currentIdStr.substring(a.length());

                    try {
                        int nextId = Integer.parseInt(numericPart) + 1;
                        return a + nextId;
                    } catch (NumberFormatException e) {
                        e.printStackTrace();
                    }
                }
            }
        } catch (SQLException e) {
            e.printStackTrace();
        }

        return null;
    }

}
