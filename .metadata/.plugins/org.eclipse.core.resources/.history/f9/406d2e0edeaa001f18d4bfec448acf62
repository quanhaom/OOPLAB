private Timer playbackTimer;
private int currentTimeInSeconds;

public void startPlayback(int totalTimeInMinutes, String trackOrCDName) {
    // Convert total time in minutes to seconds
    int totalTimeInSeconds = totalTimeInMinutes * 60;
    currentTimeInSeconds = 0;

    // Create the initial timeLabel with the track/CD name and total time (in minutes)
    timeLabel.setText(trackOrCDName + ": " + formatTime(currentTimeInSeconds) 
                      + " -----------||----------- " + formatTime(totalTimeInSeconds));

    if (playbackTimer != null) {
        playbackTimer.cancel(); // Stop any existing timers
    }

    playbackTimer = new Timer();
    playbackTimer.scheduleAtFixedRate(new TimerTask() {
        @Override
        public void run() {
            // Increment time and update label
            SwingUtilities.invokeLater(() -> {
                currentTimeInSeconds++;
                timeLabel.setText(trackOrCDName + ": " + formatTime(currentTimeInSeconds) 
                                  + " -----------||----------- " + formatTime(totalTimeInSeconds));

                // Stop the timer when playback finishes
                if (currentTimeInSeconds >= totalTimeInSeconds) {
                    playbackTimer.cancel();
                }
            });
        }
    }, 0, 1000); // Run every second
}

// Helper method to format time as MM:SS
private String formatTime(int timeInSeconds) {
    int minutes = timeInSeconds / 60;
    int seconds = timeInSeconds % 60;
    return String.format("%d:%02d", minutes, seconds);
}
